//
// InlineResponse400.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import SerializedSwift

open class ServerResponseMessage: Codable {
    public var code: Int?
	public var message: String?

	#warning("rip")
	public init(code: Int, message: String) {
		self.code = code
		self.message = message
	}
}

open class ServerError: Serializable {

	@Serialized(default: [])
	public var errors: [String]

	public required init() { }

}



/*
open class ResponseError: Codable {

    public var message: String
    public var code: Int?

    public init(message: String, code: Int?) {
        self.message = message
        self.code = code
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(message, forKey: "message")
        try container.encodeIfPresent(code, forKey: "code")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        message = try container.decode(String.self, forKey: "message")
        code = try container.decodeIfPresent(Int.self, forKey: "code")
    }
}*/

